<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

	<bean id="initializeFeedType" class="com.sellinall.lazada.init.InitializeFeedType" />
	<bean id="initPostAsNonvariant" class="com.sellinall.lazada.init.InitPostAsNonvariant" />

  	<bean id="submitAddItemRequest" class="com.sellinall.lazada.requests.SubmitAddItemRequest" />
	<bean id="uploadImageToSite" class="com.sellinall.lazada.requests.UploadImageToSite" />
	<bean id="uploadDescriptionImageToSite" class="com.sellinall.lazada.requests.UploadDescriptionImageToSite" />
  	<bean id="updateSKUIndividualStatus" class="com.sellinall.lazada.db.UpdateSKUIndividualStatus" />
	<bean id="validateImage" class="com.sellinall.lazada.validation.ValidateImage" />
	<bean id="validateMandatoryFields" class="com.sellinall.lazada.validation.ValidateMandatoryFields" />
  	<bean id="constructAddVariantBatchMessage" class="com.sellinall.lazada.process.ConstructAddVariantBatchMessage" />
   <!-- this is an included XML file where we only the the routeContext -->
    <routeContext id="postProcessorRoutes" xmlns="http://camel.apache.org/schema/spring">
    	<route id="addItem">
    		<from uri="direct:addItem" />
    		<process ref="initializeStartPostRoute" />    		
    		<to uri="direct:postToChannel" />
    	</route>
    	
    	<route id="postToChannel" >
    		<from uri="direct:postToChannel" />
    		<split parallelProcessing="true">
				<method ref="splitterBean" method="splitNickNames" />
	    		<to uri="direct:loadData" />
	    		<choice>
					<when>
						<simple>${exchangeProperty.isStatusUpdate} == true</simple>
						<process ref="processInventoryForStatusUpdate" />
						<to uri="direct:update" />
					</when>
					<when>
						<simple>${exchangeProperty.isPriceUpdate} == true</simple>
						<to uri="direct:update" />
						<when>
							<simple> ${exchangeProperty.requestType} == 'batchEditItem'</simple>
							<process ref="prepareBatchMessage" />
							<split parallelProcessing="true">
								<simple>${body}</simple>
								<to uri="direct:publishMessageToBatch" />
							</split>
						</when>
					</when>
					<when>
						<simple>${exchangeProperty.postAsNonVariant} == true</simple>
						<to uri="direct:postAsNonVariant" />
					</when>
					<otherwise>
						<to uri="direct:post" />
					</otherwise>
				</choice>
			</split>
    	</route>
    	
    	<route id="postAsNonVariant" >
    		<from uri="direct:postAsNonVariant" />
    		<setBody>
    			<simple>${exchangeProperty.postAsNonVariantList}</simple>
    		</setBody>
    		<split parallelProcessing="true">
				<simple>${body}</simple>
				<process ref="initPostAsNonvariant" />
				<to uri="direct:post" />
		</split>
    	</route>
    
		<route id="post">
			<from uri="direct:post" />
			<process ref="initializePostRoute" />
			<when>
			   <simple>${exchangeProperty.getAccessToken} == true</simple>
			   <to uri="direct:getAccessToken" />
			</when>
			<to uri="direct:validateRequirementAddItem" />
			<when>
				<simple>${exchangeProperty.fieldsValidationSuccess} == true and ${exchangeProperty.isValidateImageSize} == true</simple>
				<process ref="uploadImageToSite"/>
				<when>
					<simple>${exchangeProperty.isImageUploaded} == true</simple>
					<when>
						<simple>${exchangeProperty.descriptionImageList} != null</simple>
						<process ref="uploadDescriptionImageToSite"/>
					</when>
					<choice>
						<when>
							<simple>${exchangeProperty.requestType} == "addVariant"</simple>
							<to uri="freemarker:classpath:templates/AddVariantRequest.ftl?contentCache=true" />
							<process ref="submitAddItemRequest" />
						</when>
						<when>
							<simple>${exchangeProperty.requestType} == "batchEditItem" || ${exchangeProperty.requestType} == "editItem"</simple>
							<setProperty propertyName="isLastLoop">
							    <simple>false</simple>
						        </setProperty>
						        <loop doWhile="true">
						               <simple>${exchangeProperty.isLastLoop} ==  false </simple>
						               <process ref="processUpdateByPage"/>
						               <to uri="freemarker:classpath:templates/AddItemRequest.ftl?contentCache=true" />
							       <process ref="submitAddItemRequest" />
						        </loop>
						</when>
						<otherwise>
							<to uri="freemarker:classpath:templates/AddItemRequest.ftl?contentCache=true" />
							<process ref="submitAddItemRequest" />
						</otherwise>
					</choice>
				</when>
			</when>
			<when>
				<simple>${exchangeProperty.isImagesUpdate} == true and ${exchangeProperty.isValidateImageSize} == true and ${exchangeProperty.isPostingSuccess} == false</simple>
				<to uri="direct:updateImages" />
			</when>
			<when>
				<simple>${exchangeProperty.requestType} == 'batchAddItem' || ${exchangeProperty.requestType} == 'batchEditItem'</simple>
					<when>
						<simple>${exchangeProperty.isSalePriceRemove} == true</simple>
						<to uri="direct:removeSalePrice" />
					</when>
					<process ref="prepareBatchMessage" />
					<split parallelProcessing="true">
						<simple>${body}</simple>
						<to uri="direct:publishMessageToBatch" />
					</split>
			</when>
			<when>
				<simple>${exchangeProperty.requestType} == 'editItem'</simple>
				<when>
					<simple>${exchangeProperty.isSalePriceRemove} == true</simple>
					<to uri="direct:removeSalePrice" />
				</when>
			</when>
			<when>
				<simple>${exchangeProperty.requestType} == "addVariant" and ${exchangeProperty.rowIdentifier} != null</simple>
				<process ref="constructAddVariantBatchMessage" />
				<split parallelProcessing="true">
					<simple>${body}</simple>
					<to uri="direct:publishMessageToBatch" />
				</split>
			</when>
			<setBody>
				<simple>${exchangeProperty.inventoryDetails}</simple>
			</setBody>
			<split parallelProcessing="true">
				<simple>${body}</simple>
				<process ref="updateSKUIndividualStatus" />
				<to uri="mongodb:mongoInventoryBean?database={{mongo.inventory.database}}&amp;collection=inventory&amp;operation=update" />
			</split>
			<when>
				<simple>${exchangeProperty.requestType} == "addVariant" and ${exchangeProperty.isPostingSuccess} == true and ${exchangeProperty.isEligibleToUpdatePM} == true</simple>
				<to uri="direct:updateProductMasterRoute" />
			</when>
 		</route>
		
		<route id="validateRequirementAddItem">
			<from uri="direct:validateRequirementAddItem" />
			<process ref="validateMandatoryFields" />
			<process ref="validateImage" />
		</route>
	
    </routeContext>
</beans>