<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">
	<bean id="initializeInsertIndividualSkuModelInvetoryItem"
		class="com.sellinall.lazada.init.InitializeInsertIndividualSkuModelInvetoryItem" />
	<bean id="processParentInventoryIndividualSkuModel"
		class="com.sellinall.lazada.response.ProcessParentInventoryIndividualSkuModel" />
	<bean id="processInventoryListIndividualSkuModel"
		class="com.sellinall.lazada.response.ProcessInventoryListIndividualSkuModel" />
	<bean id="constructPayloadForAutoLinking" class="com.sellinall.lazada.message.ConstructPayloadForAutoLinking" />
	<bean id="constructPayloadForInsertListings" class="com.sellinall.lazada.requests.ConstructPayloadForInsertListings" />
	<bean id="processInsertListingResponse" class="com.sellinall.lazada.response.ProcessInsertListingResponse" />
	<bean id="handleException" class="com.sellinall.lazada.exception.HandleException" />
	<bean id="loadChildInventory" class="com.sellinall.lazada.db.LoadChildInventory" />

	<routeContext id="pullIndividualSkuModelInventoryRoutes" xmlns="http://camel.apache.org/schema/spring">

		<route id="processIndividualSkuModelInventoryList">
			<from uri="direct:processIndividualSkuModelInventoryList" />
			<loop>
				<simple>${exchangeProperty.totalItemsInCurrentPage}</simple>
				<doTry>
					<process ref="getItemDetails" />
					<choice>
						<when>
							<simple>${exchangeProperty.responseSuccess} == true</simple>
							<process ref="initProcessInventoryItem" />
							<choice>
								<when>
									<simple>${exchangeProperty.itemStatus} != "deleted" and
										${exchangeProperty.hasItemExists} == true
									</simple>
									<to uri="direct:processIndividualSkuModelInventoryItem" />
								</when>
							</choice>
						</when>
						<otherwise>
							<setProperty propertyName="noOfItemSkipped">
								<simple>${exchangeProperty.noOfItemSkipped}++</simple>
							</setProperty>
						</otherwise>
					</choice>
					<doCatch>
						<exception>java.lang.Exception</exception>
						<exception>org.codehaus.jettison.json.JSONException</exception>
						<setHeader headerName="exceptionMessage">
							<simple>${exception.stacktrace}</simple>
						</setHeader>
						<setProperty propertyName="noOfItemSkipped">
							<simple>${exchangeProperty.noOfItemSkipped}++</simple>
						</setProperty>
						<process ref="handleException" />
					</doCatch>
				</doTry>
				<setProperty propertyName="itemListIndex">
					<simple>${exchangeProperty.itemListIndex}++</simple>
				</setProperty>		
			</loop>
			<setProperty propertyName="pageNumber">
				<simple>${exchangeProperty.pageNumber}++</simple>
			</setProperty>
			<choice>
				<when>
					<simple>${exchangeProperty.isLastLoop} == true</simple>
					<setHeader headerName="importStatus">
						<constant>COMPLETED</constant>
					</setHeader>
					<to uri="direct:updateBatchProcessor" />
				</when>
				<otherwise>
					<setHeader headerName="importStatus">
						<constant>PROCESSING</constant>
					</setHeader>
					<to uri="direct:updateBatchProcessor" />
					<delay><constant>5000</constant></delay>
					<to uri="direct:publishPagingMessage" />
				</otherwise>
			</choice>
		</route>

		<route id="processIndividualSkuModelInventoryItem">
			<from uri="direct:processIndividualSkuModelInventoryItem" />
			<choice>
				<when>
					<simple>${exchangeProperty.isInventoryEmpty} == true</simple>
					<to uri="direct:contructInventoryDetailsRoute" />
					<to uri="direct:insertInventory" />
				</when>
				<otherwise>
					<to uri="direct:loadAndProcessAutoLinking" />
				</otherwise>
			</choice>
			<setProperty propertyName="noOfItemCompleted">
				<simple>${exchangeProperty.noOfItemCompleted}++</simple>
			</setProperty>
		</route>

		<route id="loadAndProcessAutoLinking">
			<from uri="direct:loadAndProcessAutoLinking" />
			<process ref="loadInventoryForAutoLinking" />
			<to
				uri="mongodb:mongoInventoryBean?database={{mongo.inventory.database}}&amp;collection=inventory&amp;operation=findAll" />
			<process ref="processInventoryForAutoLinking" />
			<when>
				<simple>${exchangeProperty.itemHasVariants} == true and ${exchangeProperty.itemIsExistInInventoryDetails} == true</simple>
				<process ref="loadChildInventory" />
			</when>
			<to uri="direct:contructInventoryDetailsRoute" />
			<choice>
				<when>
					<simple>${exchangeProperty.isEligibleToInsertLinked} == true</simple>
					<to uri="direct:insertInventory" />
				</when>
				<otherwise>
					<to uri="direct:processInventoryForAutolink" />
				</otherwise>
			</choice>
		</route>

		<route id="processInventoryForAutolink">
			<from uri="direct:processInventoryForAutolink" />
			<when>
				<simple>${exchangeProperty.itemIsExistInInventoryDetails} == true</simple>
				<process ref="constructPayloadForAutoLinking" />
				<process ref="buildMudraHeader" />
				<doTry>
					<recipientList>
						<simple>{{inventory.endpoint}}/inventoryList</simple>
					</recipientList>
					<when>
						<simple>${exchangeProperty.isImportMissingItem} == null</simple>
						<setProperty propertyName="noOfItemLinked">
						<simple>${exchangeProperty.noOfItemLinked}++</simple>
					</setProperty>
					</when>
					<doCatch>
						<exception>java.lang.Exception</exception>
						<setProperty propertyName="noOfItemSkipped">
							<simple>${exchangeProperty.noOfItemSkipped}++</simple>
						</setProperty>
					</doCatch>
				</doTry>
			</when>
		</route>

		<route id="insertInventory">
			<from uri="direct:insertInventory" />
			<process ref="constructPayloadForInsertListings" />
			<process ref="buildMudraHeader" />
			<recipientList>
				<simple>{{inventory.endpoint}}/listing?throwExceptionOnFailure=false</simple>
			</recipientList>
			<process ref="processInsertListingResponse" />
			<when>
				<simple>${exchangeProperty.isEligibleToUpdateProductMaster} == true</simple>
				<setProperty propertyName="inventoryUrl">
					<simple>{{inventory.endpoint}}</simple>
				</setProperty>
				<process ref="updateProductMasterRequest" />
			</when>
		</route>

		<route id="contructInventoryDetailsRoute">
			<from uri="direct:contructInventoryDetailsRoute" />
			<process ref="initializeInsertIndividualSkuModelInvetoryItem" />
			<process ref="processImageURL" />
			<process ref="processParentInventoryIndividualSkuModel" />
			<process ref="processInventoryListIndividualSkuModel" />
		</route>

	</routeContext>

</beans>